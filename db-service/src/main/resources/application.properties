spring.application.name=db-service
#server.port=8080

#none This is the default for MySQL, no change to the database structure.
#update Hibernate changes the database according to the given Entity structures.
#create Creates the database every time, but donâ€™t drop it when close.
#create-drop Creates the database then drops it when the SessionFactory closes.
spring.jpa.hibernate.ddl-auto=create

spring.datasource.url=jdbc:mysql://localhost:3306/db_example
#spring.datasource.username=springuser
#spring.datasource.password=ThePassword
spring.datasource.username = root
spring.datasource.password = db-password


#postgresql
#
#spring.jpa.database = MYSQL
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/test2?createDatabaseIfNotExist=true&verifyServerCertificate=false&useSSL=false&requireSSL=false
##database.url=jdbc:mysql://localhost:3306/userdb?createDatabaseIfNotExist=true
#spring.datasource.username = root
#spring.datasource.password = db-password
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.show_sql=true
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.hbm2ddl.auto=create
#spring.jpa.properties.hibernate.id.new_generator_mappings=false
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy



#
##https://docs.jboss.org/hibernate/orm/5.2/userguide/html_single/Hibernate_User_Guide.html#configurations-hbmddl
##create-only, drop, create, create-drop, validate, and update)
#spring.jpa.hibernate.hbm2ddl.auto=create
#
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/hello_dev
#spring.datasource.username=postgres
#spring.datasource.password=

#mysqlproperties

# Connection url for the database "netgloo_blog"
#spring.datasource.url = jdbc:mysql://localhost:3306/test
#
## Username and password
#spring.datasource.username = root
#spring.datasource.password = db-password
#
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
